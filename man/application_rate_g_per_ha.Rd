% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/use-rates.R
\name{application_rate_g_per_ha}
\alias{application_rate_g_per_ha}
\title{Calculate application rates for active ingredients}
\usage{
application_rate_g_per_ha(product_uses, aggregation = c("mean", "max", "min"))
}
\arguments{
\item{product_uses}{A tibble containing the columns 'application_area_de',
'min_dosage', 'max_dosage', 'min_rate', 'max_rate', from the 'uses' table
in a \link{psmv_dm} object, as well as the columns 'percent' and 'g_per_L'
from the 'ingredients' table in a \link{psmv_dm} object.}

\item{aggregation}{How to represent a range if present, e.g. "mean" or "max"}
}
\value{
A tibble containing one additional column 'rate_g_per_ha'
}
\description{
Calculate application rates for active ingredients
}
\note{
The reference application volume is used if there is no 'expenditure'.
It is selected only based on the product application area. This is not correct
if hops ('Hopfen') is the culture, as it has a unique reference application
volume of 3000 L/ha.
Applications to hops were excluded for calculating mean use rates in the
indicator project (Korkaric 2023), arguing that it is not grown in large
areas in Switzerland.
}
\examples{
library(psmv)
library(dplyr)
library(dm)
psmv <- psmv_list[["2022"]]
  
product_uses_with_ingredients <- psmv |>
  dm_filter(substances = 
    (substance_de \%in\% c("Halauxifen-methyl", "Kupfer (als Kalkpr\u00E4parat)"))) |>
  dm_flatten_to_tbl(uses, products) |>
  left_join(psmv$ingredients, by = join_by(wNbr),
    relationship = "many-to-many") |>
  left_join(psmv$substances, by = join_by(pk)) |>
  select(wNbr, name, use_nr, 
    min_dosage, max_dosage, min_rate, max_rate, units_de,
    application_area_de, 
    substance_de, percent, g_per_L)

application_rate_g_per_ha(product_uses_with_ingredients) |>
  filter(name \%in\% c("Cerelex", "Pixxaro EC", "Bordeaux S")) |>
  select(ai = substance_de, app_area = application_area_de,
    min_d = min_dosage,  max_d = max_dosage,
    min_r = min_rate, max_r = max_rate,
    units_de, rate = rate_g_per_ha) |>
  print(n = Inf)
}
